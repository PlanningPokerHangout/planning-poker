{"version":3,"sources":["webpack:///main.js","webpack:///./src/app.jsx","webpack:///./src/constants/PlanningPokerConstants.js","webpack:///./src/dispatcher/PlanningPokerAppDispatcher.js","webpack:///./src/actions/PlanningPokerActionCreators.js","webpack:///./src/stores/ParticipantStore.js","webpack:///./src/stores/SettingsStore.js","webpack:///./src/stores/VoteStore.js","webpack:///./src/components/Ballot.react.js","webpack:///./src/components/Moderator.react.js","webpack:///./src/components/Participants.react.js","webpack:///./src/components/Poker.react.js","webpack:///./src/components/VotingOption.react.js","webpack:///./src/dao/GoogleHangoutDAO.js"],"names":["webpackJsonp",0,"module","exports","__webpack_require__","React","Poker","GoogleHangoutDAO","init","render","createElement","document","getElementById",23,"keyMirror","ActionTypes","INITIALIZED","PARTICIPANTS_UPDATED","TOGGLE_SCORE_DISPLAY","VOTES_CHANGED","RESET_SCORES","SELECT_CARD","PayloadSources","SERVER_ACTION","VIEW_ACTION",30,"PlanningPokerConstants","Dispatcher","assign","PlanningPokerAppDispatcher","handleServerAction","action","payload","source","this","dispatch","handleViewAction",41,"resetScores","type","toggleScoreDisplay","selectCard","participantID","cardValue","updateParticipants","participants","updateLocalParticipant","participant","LOCAL_PARTICIPANT_UPDATED","updateVotes","votes","setInitialData","initialData","localParticipant",42,"hasAppEnabled","input","CHANGE_EVENT","EventEmitter","_","ParticipantStore","extend","emitChange","emit","addChangeListener","callback","on","getParticipants","all","active","filter","inactive","reject","local","getLocalParticipant","prototype","dispatchToken","register",60,"_shouldDisplayScores","_appIsInitialized","SettingsStore","shouldDisplayScores","appIsInitialized",61,"updatedVotes","VoteStore","getVoteByID","id",97,"_getStateFromStore","me","choices","VotingOption","Ballot","createClass","displayName","getInitialState","componentDidMount","_onChange","componentWillUnmount","removeChangeListener","setState","renderVotingOption","choice","idx","list","vote","state","selected","lastItem","length","value","key","votingOptionList","map","className",98,"Actions","Moderator","_resetScores","_toggleScores","onClick",99,"displayScores","CHECK_MARK","Participant","props","person","voteValue","reveal","cx","addons","classSet","participantClasses","scoreClasses","score","right","hide","isNull","Participants","_renderParticipant","revealScores","default","activeParticipants","inactiveParticipants",100,"initialized",101,"handleClick","optionClasses","button","classes","columns","small-4","medium-3","end",102,"getParticipantIDS","participantIDS","pluck","getVotesFromState","pick","peopleChanged","eventObj","hangoutStateChanged","initializeHangout","localParticipantId","gapi","hangout","getLocalParticipantId","getParticipantById","data","getState","setTimeout","registerHangoutCallbacks","onApiReady","add","onParticipantsChanged","onStateChanged","setValue","submitDelta","window"],"mappings":"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","file":"main.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(96);\n\t\n\tvar Poker = __webpack_require__(100);\n\tvar GoogleHangoutDAO = __webpack_require__(102);\n\t\n\tGoogleHangoutDAO.init();\n\t\n\tReact.render(React.createElement(Poker, null), document.getElementById('app'));\n\n/***/ },\n\n/***/ 23:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar keyMirror = __webpack_require__(106);\n\t\n\tmodule.exports = {\n\t\n\t  ActionTypes: keyMirror({\n\t    INITIALIZED: null,\n\t    PARTICIPANTS_UPDATED: null,\n\t    TOGGLE_SCORE_DISPLAY: null,\n\t    VOTES_CHANGED: null,\n\t    RESET_SCORES: null,\n\t    SELECT_CARD: null\n\t  }),\n\t\n\t  PayloadSources: keyMirror({\n\t    SERVER_ACTION: null,\n\t    VIEW_ACTION: null\n\t  })\n\t\n\t};\n\n/***/ },\n\n/***/ 30:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar PlanningPokerConstants = __webpack_require__(23);\n\tvar Dispatcher = __webpack_require__(104).Dispatcher;\n\tvar assign = __webpack_require__(107);\n\t\n\tvar PayloadSources = PlanningPokerConstants.PayloadSources;\n\t\n\tvar PlanningPokerAppDispatcher = assign(new Dispatcher(), {\n\t\n\t  /**\n\t   * @param {object} action The details of the action, including the action's\n\t   * type and additional data coming from the server.\n\t   */\n\t  handleServerAction: function handleServerAction(action) {\n\t    var payload = {\n\t      source: PayloadSources.SERVER_ACTION,\n\t      action: action\n\t    };\n\t    this.dispatch(payload);\n\t  },\n\t\n\t  /**\n\t   * @param {object} action The details of the action, including the action's\n\t   * type and additional data coming from the view.\n\t   */\n\t  handleViewAction: function handleViewAction(action) {\n\t    var payload = {\n\t      source: PayloadSources.VIEW_ACTION,\n\t      action: action\n\t    };\n\t    this.dispatch(payload);\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = PlanningPokerAppDispatcher;\n\n/***/ },\n\n/***/ 41:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar PlanningPokerAppDispatcher = __webpack_require__(30);\n\tvar PlanningPokerConstants = __webpack_require__(23);\n\t\n\tvar ActionTypes = PlanningPokerConstants.ActionTypes;\n\tvar PayloadSources = PlanningPokerConstants.PayloadSources;\n\t\n\tmodule.exports = {\n\t  resetScores: function resetScores() {\n\t    PlanningPokerAppDispatcher.handleViewAction({\n\t      type: ActionTypes.RESET_SCORES\n\t    });\n\t  },\n\t  toggleScoreDisplay: function toggleScoreDisplay() {\n\t    PlanningPokerAppDispatcher.handleViewAction({\n\t      type: ActionTypes.TOGGLE_SCORE_DISPLAY\n\t    });\n\t  },\n\t  selectCard: function selectCard(participantID, cardValue) {\n\t    PlanningPokerAppDispatcher.handleViewAction({\n\t      type: ActionTypes.SELECT_CARD,\n\t      participantID: participantID,\n\t      cardValue: cardValue\n\t    });\n\t  },\n\t  updateParticipants: function updateParticipants(participants) {\n\t    PlanningPokerAppDispatcher.handleServerAction({\n\t      type: ActionTypes.PARTICIPANTS_UPDATED,\n\t      participants: participants\n\t    });\n\t  },\n\t  updateLocalParticipant: function updateLocalParticipant(participant) {\n\t    PlanningPokerAppDispatcher.handleServerAction({\n\t      type: ActionTypes.LOCAL_PARTICIPANT_UPDATED,\n\t      participant: participant\n\t    });\n\t  },\n\t  updateVotes: function updateVotes(votes) {\n\t    PlanningPokerAppDispatcher.handleServerAction({\n\t      type: ActionTypes.VOTES_CHANGED,\n\t      votes: votes\n\t    });\n\t  },\n\t  setInitialData: function setInitialData(initialData) {\n\t    PlanningPokerAppDispatcher.handleServerAction({\n\t      type: ActionTypes.INITIALIZED,\n\t      localParticipant: initialData.localParticipant,\n\t      participants: initialData.participants,\n\t      votes: initialData.votes\n\t    });\n\t  }\n\t\n\t};\n\n/***/ },\n\n/***/ 42:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar PlanningPokerAppDispatcher = __webpack_require__(30);\n\tvar PlanningPokerConstants = __webpack_require__(23);\n\tvar ActionTypes = PlanningPokerConstants.ActionTypes;\n\tvar CHANGE_EVENT = 'change';\n\t\n\tvar EventEmitter = __webpack_require__(33).EventEmitter;\n\tvar _ = __webpack_require__(29);\n\t\n\tvar localParticipant = null;\n\tvar participants = [];\n\t\n\tfunction hasAppEnabled(participant) {\n\t  return participant.hasAppEnabled === true;\n\t}\n\t\n\tfunction updateLocalParticipant(participant) {\n\t  localParticipant = participant;\n\t}\n\t\n\tfunction updateParticipants(input) {\n\t  participants = input;\n\t}\n\t\n\tvar ParticipantStore = _.extend({\n\t  emitChange: function emitChange() {\n\t    this.emit(CHANGE_EVENT);\n\t  },\n\t\n\t  /**\n\t   * @param {function} callback\n\t   */\n\t  addChangeListener: function addChangeListener(callback) {\n\t    this.on(CHANGE_EVENT, callback);\n\t  },\n\t\n\t  getParticipants: function getParticipants() {\n\t    return {\n\t      all: participants,\n\t      active: _.filter(participants, hasAppEnabled),\n\t      inactive: _.reject(participants, hasAppEnabled),\n\t      local: localParticipant\n\t    };\n\t  },\n\t  getLocalParticipant: function getLocalParticipant() {\n\t    return localParticipant;\n\t  }\n\t\n\t}, EventEmitter.prototype);\n\t\n\tParticipantStore.dispatchToken = PlanningPokerAppDispatcher.register(function (payload) {\n\t  var action = payload.action;\n\t\n\t  switch (action.type) {\n\t    case ActionTypes.INITIALIZED:\n\t      updateLocalParticipant(action.localParticipant);\n\t      updateParticipants(action.participants);\n\t      break;\n\t    case ActionTypes.PARTICIPANTS_UPDATED:\n\t      updateParticipants(action.participants);\n\t      ParticipantStore.emitChange();\n\t      break;\n\t    default:\n\t    // do nothing\n\t  }\n\t});\n\t\n\tmodule.exports = ParticipantStore;\n\n/***/ },\n\n/***/ 60:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar PlanningPokerAppDispatcher = __webpack_require__(30);\n\tvar PlanningPokerConstants = __webpack_require__(23);\n\tvar ActionTypes = PlanningPokerConstants.ActionTypes;\n\tvar CHANGE_EVENT = 'change';\n\t\n\tvar EventEmitter = __webpack_require__(33).EventEmitter;\n\tvar _ = __webpack_require__(29);\n\t\n\tvar _shouldDisplayScores = false;\n\tvar _appIsInitialized = false;\n\t\n\tfunction toggleScoreDisplay() {\n\t  _shouldDisplayScores = !_shouldDisplayScores;\n\t}\n\t\n\tvar SettingsStore = _.extend({\n\t  emitChange: function emitChange() {\n\t    this.emit(CHANGE_EVENT);\n\t  },\n\t\n\t  /**\n\t   * @param {function} callback\n\t   */\n\t  addChangeListener: function addChangeListener(callback) {\n\t    this.on(CHANGE_EVENT, callback);\n\t  },\n\t\n\t  shouldDisplayScores: function shouldDisplayScores() {\n\t    return _shouldDisplayScores;\n\t  },\n\t  appIsInitialized: function appIsInitialized() {\n\t    return _appIsInitialized;\n\t  }\n\t\n\t}, EventEmitter.prototype);\n\t\n\tSettingsStore.dispatchToken = PlanningPokerAppDispatcher.register(function (payload) {\n\t  var action = payload.action;\n\t\n\t  switch (action.type) {\n\t    case ActionTypes.TOGGLE_SCORE_DISPLAY:\n\t      toggleScoreDisplay();\n\t      SettingsStore.emitChange();\n\t      break;\n\t    case ActionTypes.INITIALIZED:\n\t      _appIsInitialized = true;\n\t      SettingsStore.emitChange();\n\t      break;\n\t    default:\n\t    // do nothing\n\t  }\n\t});\n\t\n\tmodule.exports = SettingsStore;\n\n/***/ },\n\n/***/ 61:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar PlanningPokerAppDispatcher = __webpack_require__(30);\n\tvar PlanningPokerConstants = __webpack_require__(23);\n\tvar ActionTypes = PlanningPokerConstants.ActionTypes;\n\tvar CHANGE_EVENT = 'change';\n\t\n\tvar EventEmitter = __webpack_require__(33).EventEmitter;\n\tvar _ = __webpack_require__(29);\n\t\n\tvar votes = {};\n\t\n\tvar VoteStore = _.extend({\n\t  emitChange: function emitChange() {\n\t    this.emit(CHANGE_EVENT);\n\t  },\n\t\n\t  /**\n\t   * @param {function} callback\n\t   */\n\t  addChangeListener: function addChangeListener(callback) {\n\t    this.on(CHANGE_EVENT, callback);\n\t  },\n\t\n\t  getVoteByID: function getVoteByID(id) {\n\t    return votes[id] || null;\n\t  }\n\t}, EventEmitter.prototype);\n\t\n\tfunction updateVotes(updatedVotes) {\n\t  votes = updatedVotes;\n\t}\n\t\n\tVoteStore.dispatchToken = PlanningPokerAppDispatcher.register(function (payload) {\n\t  var action = payload.action;\n\t\n\t  switch (action.type) {\n\t    case ActionTypes.INITIALIZED:\n\t      updateVotes(action.votes);\n\t      VoteStore.emitChange();\n\t      break;\n\t    case ActionTypes.VOTES_CHANGED:\n\t      updateVotes(action.votes);\n\t      VoteStore.emitChange();\n\t      break;\n\t    default:\n\t    // do nothing\n\t  }\n\t});\n\t\n\tmodule.exports = VoteStore;\n\n/***/ },\n\n/***/ 97:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(34);\n\tvar _ = __webpack_require__(29);\n\t\n\t// Stores\n\tvar ParticipantStore = __webpack_require__(42);\n\tvar VoteStore = __webpack_require__(61);\n\t\n\t// Components\n\tvar VotingOption = __webpack_require__(101);\n\t\n\tfunction _getStateFromStore() {\n\t    return {\n\t        me: ParticipantStore.getLocalParticipant(),\n\t        choices: [\"?\", \"0\", \"1/2\", \"1\", \"2\", \"3\", \"5\", \"8\", \"13\"]\n\t    };\n\t}\n\t\n\tvar Ballot = React.createClass({\n\t    displayName: 'Ballot',\n\t\n\t    getInitialState: function getInitialState() {\n\t        return _getStateFromStore();\n\t    },\n\t    componentDidMount: function componentDidMount() {\n\t        ParticipantStore.addChangeListener(this._onChange);\n\t        VoteStore.addChangeListener(this._onChange);\n\t    },\n\t    componentWillUnmount: function componentWillUnmount() {\n\t        ParticipantStore.removeChangeListener(this._onChange);\n\t        VoteStore.removeChangeListener(this._onChange);\n\t    },\n\t    _onChange: function _onChange() {\n\t        this.setState(_getStateFromStore());\n\t    },\n\t    renderVotingOption: function renderVotingOption(choice, idx, list) {\n\t        var vote = VoteStore.getVoteByID(this.state.me.id);\n\t        var selected = choice === vote;\n\t        var lastItem = idx === list.length - 1;\n\t\n\t        return React.createElement(VotingOption, {\n\t            value: choice,\n\t            participantID: this.state.me.id,\n\t            selected: selected,\n\t            lastItem: lastItem,\n\t            key: idx\n\t        });\n\t    },\n\t    render: function render() {\n\t        var votingOptionList = _.map(this.state.choices, this.renderVotingOption);\n\t\n\t        return React.createElement(\n\t            'div',\n\t            { className: 'options' },\n\t            React.createElement(\n\t                'h4',\n\t                null,\n\t                'Select a Value'\n\t            ),\n\t            React.createElement(\n\t                'div',\n\t                { className: 'row' },\n\t                votingOptionList\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = Ballot;\n\n/***/ },\n\n/***/ 98:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(96);\n\t\n\tvar Actions = __webpack_require__(41);\n\t\n\tvar Moderator = React.createClass({\n\t    displayName: 'Moderator',\n\t\n\t    _resetScores: function _resetScores() {\n\t        Actions.resetScores();\n\t    },\n\t    _toggleScores: function _toggleScores() {\n\t        Actions.toggleScoreDisplay();\n\t    },\n\t    render: function render() {\n\t        return React.createElement(\n\t            'div',\n\t            { className: 'row' },\n\t            React.createElement(\n\t                'div',\n\t                { className: 'small-offset-2 small-4 columns' },\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'button', onClick: this._resetScores },\n\t                    'Reset Voting'\n\t                )\n\t            ),\n\t            React.createElement(\n\t                'div',\n\t                { className: 'small-4 end columns' },\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'button', onClick: this._toggleScores },\n\t                    'Toggle Scores'\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = Moderator;\n\n/***/ },\n\n/***/ 99:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(34);\n\t\n\tvar ParticipantStore = __webpack_require__(42);\n\tvar VoteStore = __webpack_require__(61);\n\tvar SettingsStore = __webpack_require__(60);\n\t\n\tvar _ = __webpack_require__(29);\n\t\n\tvar CHECK_MARK = '✓';\n\t\n\tvar Participant = React.createClass({\n\t    displayName: 'Participant',\n\t\n\t    render: function render() {\n\t        var displayName = this.props.participant.person.displayName;\n\t        var vote = this.props.vote;\n\t        var voteValue = vote.reveal ? vote.value : vote.default;\n\t\n\t        var cx = React.addons.classSet;\n\t        var participantClasses = cx({\n\t            'participant': true,\n\t            'inactive': !this.props.participant.hasAppEnabled\n\t        });\n\t        var scoreClasses = cx({\n\t            'score': true,\n\t            'right': true,\n\t            'hide': _.isNull(vote.value)\n\t        });\n\t\n\t        return React.createElement(\n\t            'li',\n\t            { className: participantClasses },\n\t            React.createElement(\n\t                'p',\n\t                { className: 'name' },\n\t                React.createElement(\n\t                    'span',\n\t                    { className: scoreClasses },\n\t                    voteValue\n\t                ),\n\t                displayName\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tfunction _getStateFromStore() {\n\t    return {\n\t        participants: ParticipantStore.getParticipants(),\n\t        displayScores: SettingsStore.shouldDisplayScores()\n\t    };\n\t}\n\t\n\tvar Participants = React.createClass({\n\t    displayName: 'Participants',\n\t\n\t    getInitialState: function getInitialState() {\n\t        return _getStateFromStore();\n\t    },\n\t    componentDidMount: function componentDidMount() {\n\t        ParticipantStore.addChangeListener(this._onChange);\n\t        VoteStore.addChangeListener(this._onChange);\n\t        SettingsStore.addChangeListener(this._onChange);\n\t    },\n\t    componentWillUnmount: function componentWillUnmount() {\n\t        ParticipantStore.removeChangeListener(this._onChange);\n\t        VoteStore.removeChangeListener(this._onChange);\n\t        SettingsStore.removeChangeListener(this._onChange);\n\t    },\n\t    _onChange: function _onChange() {\n\t        this.setState(_getStateFromStore());\n\t    },\n\t    render: function render() {\n\t        var revealScores = this.state.displayScores;\n\t\n\t        function _renderParticipant(participant) {\n\t            var vote = {\n\t                reveal: revealScores,\n\t                value: VoteStore.getVoteByID(participant.id),\n\t                default: CHECK_MARK\n\t            };\n\t\n\t            return React.createElement(Participant, {\n\t                participant: participant,\n\t                vote: vote,\n\t                key: participant.id\n\t            });\n\t        }\n\t\n\t        var activeParticipants = this.state.participants.active.map(_renderParticipant),\n\t            inactiveParticipants = this.state.participants.inactive.map(_renderParticipant);\n\t\n\t        return React.createElement(\n\t            'div',\n\t            { className: 'participants' },\n\t            React.createElement(\n\t                'h4',\n\t                null,\n\t                'Participants'\n\t            ),\n\t            React.createElement(\n\t                'div',\n\t                { className: 'row' },\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'columns small-offset-1 small-10' },\n\t                    React.createElement(\n\t                        'ul',\n\t                        { className: 'small-block-grid-1 medium-block-grid-2 large-block-grid-3' },\n\t                        activeParticipants,\n\t                        inactiveParticipants\n\t                    )\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = Participants;\n\n/***/ },\n\n/***/ 100:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(34);\n\t\n\t// Components\n\tvar Ballot = __webpack_require__(97);\n\tvar Participants = __webpack_require__(99);\n\tvar Moderator = __webpack_require__(98);\n\t\n\t// Stores\n\tvar SettingsStore = __webpack_require__(60);\n\t\n\tfunction _getStateFromStore() {\n\t    return {\n\t        initialized: SettingsStore.appIsInitialized()\n\t    };\n\t}\n\t\n\tvar Poker = React.createClass({\n\t    displayName: 'Poker',\n\t\n\t    getInitialState: function getInitialState() {\n\t        return _getStateFromStore();\n\t    },\n\t    componentDidMount: function componentDidMount() {\n\t        SettingsStore.addChangeListener(this._onChange);\n\t    },\n\t    componentWillUnmount: function componentWillUnmount() {\n\t        SettingsStore.removeChangeListener(this._onChange);\n\t    },\n\t    _onChange: function _onChange() {\n\t        this.setState(_getStateFromStore());\n\t    },\n\t    render: function render() {\n\t        if (!this.state.initialized) {\n\t\n\t            return React.createElement(\n\t                'div',\n\t                { className: 'row' },\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'columns small-12 text-center' },\n\t                    'Initializing......'\n\t                )\n\t            );\n\t        }\n\t        return React.createElement(\n\t            'div',\n\t            null,\n\t            React.createElement(Participants, null),\n\t            React.createElement(Ballot, null),\n\t            React.createElement(Moderator, null)\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = Poker;\n\n/***/ },\n\n/***/ 101:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(34);\n\t\n\t// Actions\n\tvar Actions = __webpack_require__(41);\n\t\n\tvar VotingOption = React.createClass({\n\t    displayName: 'VotingOption',\n\t\n\t    handleClick: function handleClick() {\n\t        Actions.selectCard(this.props.participantID, this.props.value);\n\t    },\n\t    render: function render() {\n\t        var cx = React.addons.classSet;\n\t        var optionClasses = cx({\n\t            'button': true,\n\t            'selected': this.props.selected\n\t        });\n\t\n\t        var classes = cx({\n\t            \"columns\": true,\n\t            \"small-4\": true,\n\t            \"medium-3\": true,\n\t            \"end\": this.props.lastItem\n\t        });\n\t\n\t        return React.createElement(\n\t            'div',\n\t            { className: classes },\n\t            React.createElement(\n\t                'div',\n\t                { onClick: this.handleClick, className: optionClasses },\n\t                this.props.value\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = VotingOption;\n\n/***/ },\n\n/***/ 102:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar gapi = window.gapi;\n\t\n\tvar PlanningPokerAppDispatcher = __webpack_require__(30);\n\tvar PlanningPokerConstants = __webpack_require__(23);\n\tvar Actions = __webpack_require__(41);\n\tvar ActionTypes = PlanningPokerConstants.ActionTypes;\n\tvar CHANGE_EVENT = 'change';\n\t\n\tvar ParticipantStore = __webpack_require__(42);\n\t\n\tvar EventEmitter = __webpack_require__(33).EventEmitter;\n\tvar _ = __webpack_require__(29);\n\t\n\t/* Utility Functions */\n\tfunction getParticipantIDS() {\n\t  var participants = ParticipantStore.getParticipants().all;\n\t  var participantIDS = _.pluck(participants, 'id');\n\t\n\t  return participantIDS;\n\t}\n\tfunction getVotesFromState(state) {\n\t  var participantIDS = getParticipantIDS();\n\t  var votes = _.pick(state, participantIDS);\n\t\n\t  return votes;\n\t}\n\t/* End Utility Functions */\n\t\n\t/* Hangout Event Callbacks */\n\tfunction peopleChanged(eventObj) {\n\t  Actions.updateParticipants(eventObj.participants);\n\t}\n\t\n\tfunction hangoutStateChanged(eventObj) {\n\t  var state = eventObj.state;\n\t  var votes = getVotesFromState(state);\n\t  Actions.updateVotes(votes);\n\t}\n\t\n\tfunction initializeHangout() {\n\t  var localParticipantId = gapi.hangout.getLocalParticipantId();\n\t  var localParticipant = gapi.hangout.getParticipantById(localParticipantId);\n\t\n\t  var participants = gapi.hangout.getParticipants();\n\t\n\t  var state = gapi.hangout.data.getState();\n\t  var votes = getVotesFromState(state);\n\t\n\t  setTimeout(function () {\n\t    Actions.setInitialData({\n\t      localParticipant: localParticipant,\n\t      participants: participants,\n\t      votes: votes\n\t    });\n\t  }, 5);\n\t}\n\t\n\tfunction registerHangoutCallbacks() {\n\t  gapi.hangout.onApiReady.add(initializeHangout);\n\t  gapi.hangout.onParticipantsChanged.add(peopleChanged);\n\t  gapi.hangout.data.onStateChanged.add(hangoutStateChanged);\n\t}\n\t/* End Hangout Event Callbacks */\n\t\n\t/* Update Google Hangout Data */\n\t\n\t// Results in a data.onStateChanged event for all users\n\tfunction selectCard(value) {\n\t  var me = ParticipantStore.getLocalParticipant();\n\t  gapi.hangout.data.setValue(me.id, value);\n\t}\n\t\n\t// Results in a onParticipantsChanged event for all users\n\tfunction resetScores() {\n\t  gapi.hangout.data.submitDelta([], // to add\n\t  getParticipantIDS() // to remove\n\t  );\n\t}\n\t\n\t/* End Update Google Hangout Data */\n\t\n\tvar GoogleHangoutDAO = {\n\t  init: function init() {\n\t    registerHangoutCallbacks();\n\t  }\n\t};\n\t\n\tGoogleHangoutDAO.dispatchToken = PlanningPokerAppDispatcher.register(function (payload) {\n\t  var action = payload.action;\n\t\n\t  switch (action.type) {\n\t    case ActionTypes.RESET_SCORES:\n\t      resetScores();\n\t      break;\n\t    case ActionTypes.SELECT_CARD:\n\t      selectCard(action.cardValue);\n\t      break;\n\t    default:\n\t    // do nothing\n\t  }\n\t});\n\t\n\tmodule.exports = GoogleHangoutDAO;\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** main.js\n **/","var React = require('react');\n\nvar Poker = require('./components/Poker.react');\nvar GoogleHangoutDAO = require('./dao/GoogleHangoutDAO');\n\nGoogleHangoutDAO.init();\n\nReact.render(\n    <Poker />,\n    document.getElementById('app')\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app.jsx\n **/","var keyMirror = require('keymirror');\n\nmodule.exports = {\n\n  ActionTypes: keyMirror({\n    INITIALIZED: null,\n    PARTICIPANTS_UPDATED: null,\n    TOGGLE_SCORE_DISPLAY: null,\n    VOTES_CHANGED: null,\n    RESET_SCORES: null,\n    SELECT_CARD: null,\n  }),\n\n  PayloadSources: keyMirror({\n    SERVER_ACTION: null,\n    VIEW_ACTION: null\n  })\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/constants/PlanningPokerConstants.js\n **/","var PlanningPokerConstants = require('../constants/PlanningPokerConstants.js');\nvar Dispatcher = require('flux').Dispatcher;\nvar assign = require('object-assign');\n\nvar PayloadSources = PlanningPokerConstants.PayloadSources;\n\nvar PlanningPokerAppDispatcher = assign(new Dispatcher(), {\n\n  /**\n   * @param {object} action The details of the action, including the action's\n   * type and additional data coming from the server.\n   */\n  handleServerAction: function(action) {\n    var payload = {\n      source: PayloadSources.SERVER_ACTION,\n      action: action\n    };\n    this.dispatch(payload);\n  },\n\n  /**\n   * @param {object} action The details of the action, including the action's\n   * type and additional data coming from the view.\n   */\n  handleViewAction: function(action) {\n    var payload = {\n      source: PayloadSources.VIEW_ACTION,\n      action: action\n    };\n    this.dispatch(payload);\n  }\n\n});\n\nmodule.exports = PlanningPokerAppDispatcher;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dispatcher/PlanningPokerAppDispatcher.js\n **/","var PlanningPokerAppDispatcher = require('../dispatcher/PlanningPokerAppDispatcher.js');\nvar PlanningPokerConstants = require('../constants/PlanningPokerConstants.js');\n\nvar ActionTypes = PlanningPokerConstants.ActionTypes;\nvar PayloadSources = PlanningPokerConstants.PayloadSources;\n\nmodule.exports = {\n  resetScores: function() {\n    PlanningPokerAppDispatcher.handleViewAction({\n      type: ActionTypes.RESET_SCORES\n    });\n  },\n  toggleScoreDisplay: function() {\n    PlanningPokerAppDispatcher.handleViewAction({\n      type: ActionTypes.TOGGLE_SCORE_DISPLAY\n    });\n  },\n  selectCard: function(participantID, cardValue) {\n    PlanningPokerAppDispatcher.handleViewAction({\n      type: ActionTypes.SELECT_CARD,\n      participantID: participantID,\n      cardValue: cardValue\n    });\n  },\n  updateParticipants: function(participants) {\n    PlanningPokerAppDispatcher.handleServerAction({\n      type: ActionTypes.PARTICIPANTS_UPDATED,\n      participants: participants\n    });\n  },\n  updateLocalParticipant: function(participant) {\n    PlanningPokerAppDispatcher.handleServerAction({\n      type: ActionTypes.LOCAL_PARTICIPANT_UPDATED,\n      participant: participant\n    });\n  },\n  updateVotes: function(votes) {\n    PlanningPokerAppDispatcher.handleServerAction({\n      type: ActionTypes.VOTES_CHANGED,\n      votes: votes\n    });\n  },\n  setInitialData: function(initialData) {\n    PlanningPokerAppDispatcher.handleServerAction({\n      type: ActionTypes.INITIALIZED,\n      localParticipant: initialData.localParticipant,\n      participants: initialData.participants,\n      votes: initialData.votes\n    });\n  }\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/actions/PlanningPokerActionCreators.js\n **/","var PlanningPokerAppDispatcher = require('../dispatcher/PlanningPokerAppDispatcher.js');\nvar PlanningPokerConstants = require('../constants/PlanningPokerConstants.js');\nvar ActionTypes = PlanningPokerConstants.ActionTypes;\nvar CHANGE_EVENT = 'change';\n\nvar EventEmitter = require('events').EventEmitter;\nvar _ = require('underscore');\n\nvar localParticipant = null;\nvar participants = [];\n\nfunction hasAppEnabled(participant) {\n  return participant.hasAppEnabled === true;\n}\n\nfunction updateLocalParticipant(participant) {\n  localParticipant = participant;\n}\n\nfunction updateParticipants(input) {\n  participants = input;\n}\n\nvar ParticipantStore = _.extend({\n  emitChange: function() {\n    this.emit(CHANGE_EVENT);\n  },\n\n  /**\n   * @param {function} callback\n   */\n  addChangeListener: function(callback) {\n    this.on(CHANGE_EVENT, callback);\n  },\n\n  getParticipants: function() {\n    return {\n      all: participants,\n      active: _.filter(participants, hasAppEnabled),\n      inactive: _.reject(participants, hasAppEnabled),\n      local: localParticipant\n    };\n  },\n  getLocalParticipant: function() {\n    return localParticipant;\n  },\n\n}, EventEmitter.prototype);\n\nParticipantStore.dispatchToken = PlanningPokerAppDispatcher.register(function(payload) {\n  var action = payload.action;\n\n  switch(action.type) {\n    case ActionTypes.INITIALIZED:\n      updateLocalParticipant(action.localParticipant);\n      updateParticipants(action.participants);\n      break;\n    case ActionTypes.PARTICIPANTS_UPDATED:\n      updateParticipants(action.participants);\n      ParticipantStore.emitChange();\n      break;\n    default:\n      // do nothing\n    }\n});\n\nmodule.exports = ParticipantStore;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stores/ParticipantStore.js\n **/","var PlanningPokerAppDispatcher = require('../dispatcher/PlanningPokerAppDispatcher.js');\nvar PlanningPokerConstants = require('../constants/PlanningPokerConstants.js');\nvar ActionTypes = PlanningPokerConstants.ActionTypes;\nvar CHANGE_EVENT = 'change';\n\nvar EventEmitter = require('events').EventEmitter;\nvar _ = require('underscore');\n\nvar shouldDisplayScores = false;\nvar appIsInitialized = false;\n\nfunction toggleScoreDisplay() {\n  shouldDisplayScores = !shouldDisplayScores;\n}\n\nvar SettingsStore = _.extend({\n  emitChange: function() {\n    this.emit(CHANGE_EVENT);\n  },\n\n  /**\n   * @param {function} callback\n   */\n  addChangeListener: function(callback) {\n    this.on(CHANGE_EVENT, callback);\n  },\n\n  shouldDisplayScores: function() {\n    return shouldDisplayScores;\n  },\n  appIsInitialized: function() {\n    return appIsInitialized;\n  },\n\n}, EventEmitter.prototype);\n\nSettingsStore.dispatchToken = PlanningPokerAppDispatcher.register(function(payload) {\n  var action = payload.action;\n\n  switch(action.type) {\n    case ActionTypes.TOGGLE_SCORE_DISPLAY:\n      toggleScoreDisplay();\n      SettingsStore.emitChange();\n      break;\n    case ActionTypes.INITIALIZED:\n      appIsInitialized = true;\n      SettingsStore.emitChange();\n      break;\n    default:\n      // do nothing\n    }\n});\n\nmodule.exports = SettingsStore;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stores/SettingsStore.js\n **/","var PlanningPokerAppDispatcher = require('../dispatcher/PlanningPokerAppDispatcher.js');\nvar PlanningPokerConstants = require('../constants/PlanningPokerConstants.js');\nvar ActionTypes = PlanningPokerConstants.ActionTypes;\nvar CHANGE_EVENT = 'change';\n\nvar EventEmitter = require('events').EventEmitter;\nvar _ = require('underscore');\n\nvar votes = {};\n\nvar VoteStore = _.extend({\n  emitChange: function() {\n    this.emit(CHANGE_EVENT);\n  },\n\n  /**\n   * @param {function} callback\n   */\n  addChangeListener: function(callback) {\n    this.on(CHANGE_EVENT, callback);\n  },\n\n  getVoteByID: function(id) {\n    return votes[id] || null;\n  }\n}, EventEmitter.prototype);\n\nfunction updateVotes(updatedVotes) {\n  votes = updatedVotes;\n}\n\nVoteStore.dispatchToken = PlanningPokerAppDispatcher.register(function(payload) {\n  var action = payload.action;\n\n  switch (action.type) {\n    case ActionTypes.INITIALIZED:\n      updateVotes(action.votes);\n      VoteStore.emitChange();\n      break;\n    case ActionTypes.VOTES_CHANGED:\n      updateVotes(action.votes);\n      VoteStore.emitChange();\n      break;\n    default:\n      // do nothing\n  }\n});\n\nmodule.exports = VoteStore;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/stores/VoteStore.js\n **/","var React = require('react/addons');\nvar _ = require('underscore');\n\n// Stores\nvar ParticipantStore = require('../stores/ParticipantStore');\nvar VoteStore = require('../stores/VoteStore');\n\n// Components\nvar VotingOption = require('./VotingOption.react');\n\nfunction _getStateFromStore() {\n    return {\n        me: ParticipantStore.getLocalParticipant(),\n        choices: [\"?\", \"0\", \"1/2\", \"1\", \"2\", \"3\", \"5\", \"8\", \"13\"],\n    };\n}\n\nvar Ballot = React.createClass({\n    getInitialState: function () {\n        return _getStateFromStore();\n    },\n    componentDidMount: function() {\n        ParticipantStore.addChangeListener(this._onChange);\n        VoteStore.addChangeListener(this._onChange);\n    },\n    componentWillUnmount: function() {\n        ParticipantStore.removeChangeListener(this._onChange);\n        VoteStore.removeChangeListener(this._onChange);\n    },\n    _onChange: function() {\n        this.setState(_getStateFromStore());\n    },\n    renderVotingOption: function(choice, idx, list) {\n        var vote = VoteStore.getVoteByID(this.state.me.id);\n        var selected = choice === vote;\n        var lastItem = idx === list.length - 1;\n\n        return (\n            <VotingOption \n                value={choice} \n                participantID={this.state.me.id} \n                selected={selected} \n                lastItem={lastItem}\n                key={idx}\n                />\n        );\n    },\n    render: function() {\n        var votingOptionList = _.map(this.state.choices, this.renderVotingOption);\n\n        return (\n            <div className=\"options\">\n                <h4>Select a Value</h4>\n                <div className=\"row\">\n                    {votingOptionList}\n                </div>\n            </div>\n        );\n    },\n});\n\nmodule.exports = Ballot;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/Ballot.react.js\n **/","var React = require('react');\n\nvar Actions = require('../actions/PlanningPokerActionCreators');\n\nvar Moderator = React.createClass({\n    _resetScores: function() {\n        Actions.resetScores();\n    },\n    _toggleScores: function() {\n        Actions.toggleScoreDisplay();\n    },\n    render: function() {\n        return (\n            <div className=\"row\">\n                <div className=\"small-offset-2 small-4 columns\">\n                    <div className=\"button\" onClick={this._resetScores}>Reset Voting</div>\n                </div>\n                <div className=\"small-4 end columns\">\n                    <div className=\"button\" onClick={this._toggleScores}>Toggle Scores</div>\n                </div>\n            </div>\n        );\n    },\n});\n\nmodule.exports = Moderator;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/Moderator.react.js\n **/","var React = require('react/addons');\n\nvar ParticipantStore = require('../stores/ParticipantStore');\nvar VoteStore = require('../stores/VoteStore');\nvar SettingsStore = require('../stores/SettingsStore');\n\nvar _ = require('underscore');\n\nvar CHECK_MARK = \"\\u2713\";\n\nvar Participant = React.createClass({\n    render: function() { \n        var displayName = this.props.participant.person.displayName;\n        var vote = this.props.vote;\n        var voteValue = vote.reveal ? vote.value : vote.default;\n\n        var cx = React.addons.classSet;\n        var participantClasses = cx({\n            'participant': true,\n            'inactive': !this.props.participant.hasAppEnabled,\n        });\n        var scoreClasses = cx({\n            'score': true,\n            'right': true,\n            'hide': _.isNull(vote.value),\n        });\n\n        return (\n            <li className={participantClasses}>\n                <p className=\"name\">\n                    <span className={scoreClasses}>{voteValue}</span>\n                    {displayName}\n                </p>\n            </li>\n        );\n    },\n});\n\nfunction _getStateFromStore() {\n    return {\n        participants: ParticipantStore.getParticipants(),\n        displayScores: SettingsStore.shouldDisplayScores(),\n    };\n}\n\nvar Participants = React.createClass({\n    getInitialState: function() {\n        return _getStateFromStore();\n    },\n    componentDidMount: function() {\n        ParticipantStore.addChangeListener(this._onChange);\n        VoteStore.addChangeListener(this._onChange);\n        SettingsStore.addChangeListener(this._onChange);\n    },\n    componentWillUnmount: function() {\n        ParticipantStore.removeChangeListener(this._onChange);\n        VoteStore.removeChangeListener(this._onChange);\n        SettingsStore.removeChangeListener(this._onChange);\n    },\n    _onChange: function() {\n        this.setState(_getStateFromStore());\n    },\n    render: function() {\n        var revealScores = this.state.displayScores;\n\n        function _renderParticipant(participant) {\n            var vote = {\n                reveal: revealScores,\n                value: VoteStore.getVoteByID(participant.id),\n                default: CHECK_MARK,\n            };\n\n            return (\n                <Participant \n                    participant={participant} \n                    vote={vote}\n                    key={participant.id} \n                    />\n            );\n        }\n\n        var activeParticipants = this.state.participants.active.map(_renderParticipant),\n            inactiveParticipants = this.state.participants.inactive.map(_renderParticipant);\n\n        return (\n            <div className=\"participants\">\n                <h4>Participants</h4>\n                <div className=\"row\">\n                    <div className=\"columns small-offset-1 small-10\">\n                        <ul className=\"small-block-grid-1 medium-block-grid-2 large-block-grid-3\">\n                            {activeParticipants}\n                            {inactiveParticipants}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    },\n});\n\nmodule.exports = Participants;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/Participants.react.js\n **/","var React = require('react/addons');\n\n// Components\nvar Ballot = require('./Ballot.react');\nvar Participants = require('./Participants.react');\nvar Moderator = require('./Moderator.react');\n\n// Stores\nvar SettingsStore = require('../stores/SettingsStore');\n\nfunction _getStateFromStore() {\n    return {\n        initialized: SettingsStore.appIsInitialized(),\n    };\n}\n\nvar Poker = React.createClass({\n    getInitialState: function() {\n        return _getStateFromStore();\n    },\n    componentDidMount: function() {\n        SettingsStore.addChangeListener(this._onChange);\n    },\n    componentWillUnmount: function() {\n        SettingsStore.removeChangeListener(this._onChange);\n    },\n    _onChange: function() {\n        this.setState(_getStateFromStore());\n    },\n    render: function() {\n        if (!this.state.initialized) {\n            \n            return (\n                <div className=\"row\">\n                    <div className=\"columns small-12 text-center\">\n                        Initializing......\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div>\n                <Participants />\n                <Ballot />\n                <Moderator />\n            </div>\n        );\n    },\n});\n\nmodule.exports = Poker;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/Poker.react.js\n **/","var React = require('react/addons');\n\n// Actions\nvar Actions = require('../actions/PlanningPokerActionCreators');\n\nvar VotingOption = React.createClass({\n    handleClick: function() {\n        Actions.selectCard(this.props.participantID, this.props.value);\n    },\n    render: function() {\n        var cx = React.addons.classSet;\n        var optionClasses = cx({\n            'button': true,\n            'selected': this.props.selected,\n        });\n\n        var classes = cx({\n            \"columns\": true,\n            \"small-4\": true,\n            \"medium-3\": true,\n            \"end\": this.props.lastItem,\n        });\n\n        return (\n            <div className={classes}>\n                <div onClick={this.handleClick} className={optionClasses} >\n                    {this.props.value}\n                </div>\n            </div>\n        );\n    },\n});\n\nmodule.exports = VotingOption;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/VotingOption.react.js\n **/","var gapi = window.gapi;\n\nvar PlanningPokerAppDispatcher = require('../dispatcher/PlanningPokerAppDispatcher');\nvar PlanningPokerConstants = require('../constants/PlanningPokerConstants');\nvar Actions = require('../actions/PlanningPokerActionCreators');\nvar ActionTypes = PlanningPokerConstants.ActionTypes;\nvar CHANGE_EVENT = 'change';\n\nvar ParticipantStore = require('../stores/ParticipantStore');\n\nvar EventEmitter = require('events').EventEmitter;\nvar _ = require('underscore');\n\n/* Utility Functions */\nfunction getParticipantIDS() {\n  var participants = ParticipantStore.getParticipants().all;\n  var participantIDS = _.pluck(participants, 'id');\n\n  return participantIDS;\n}\nfunction getVotesFromState(state) {\n  var participantIDS = getParticipantIDS();\n  var votes = _.pick(state, participantIDS);\n\n  return votes;\n}\n/* End Utility Functions */\n\n/* Hangout Event Callbacks */\nfunction peopleChanged(eventObj) {\n  Actions.updateParticipants(eventObj.participants);\n}\n\nfunction hangoutStateChanged(eventObj) {\n  var state = eventObj.state;\n  var votes = getVotesFromState(state);\n  Actions.updateVotes(votes);\n}\n\nfunction initializeHangout() {\n  var localParticipantId = gapi.hangout.getLocalParticipantId();\n  var localParticipant = gapi.hangout.getParticipantById(localParticipantId);\n\n  var participants = gapi.hangout.getParticipants();\n\n  var state = gapi.hangout.data.getState();\n  var votes = getVotesFromState(state);\n\n  setTimeout(function() {\n    Actions.setInitialData({\n      localParticipant: localParticipant, \n      participants: participants, \n      votes: votes,\n    });\n  }, 5);\n}\n\nfunction registerHangoutCallbacks() {\n  gapi.hangout.onApiReady.add(initializeHangout);\n  gapi.hangout.onParticipantsChanged.add(peopleChanged);\n  gapi.hangout.data.onStateChanged.add(hangoutStateChanged);\n}\n/* End Hangout Event Callbacks */\n\n/* Update Google Hangout Data */\n\n// Results in a data.onStateChanged event for all users\nfunction selectCard(value) {\n  var me = ParticipantStore.getLocalParticipant();\n  gapi.hangout.data.setValue(me.id, value);\n}\n\n// Results in a onParticipantsChanged event for all users\nfunction resetScores() {\n  gapi.hangout.data.submitDelta(\n    [], // to add\n    getParticipantIDS() // to remove\n  );\n}\n\n/* End Update Google Hangout Data */\n\n\nvar GoogleHangoutDAO = {\n  init: function() {\n    registerHangoutCallbacks();\n  }\n};\n\n\nGoogleHangoutDAO.dispatchToken = PlanningPokerAppDispatcher.register(function(payload) {\n  var action = payload.action;\n\n  switch(action.type) {\n    case ActionTypes.RESET_SCORES:\n      resetScores();\n      break;\n    case ActionTypes.SELECT_CARD:\n      selectCard(action.cardValue);\n      break;\n    default:\n      // do nothing\n    }\n});\n\n\nmodule.exports = GoogleHangoutDAO;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dao/GoogleHangoutDAO.js\n **/"],"sourceRoot":""}